{"ast":null,"code":"import axios from \"axios\";\nimport { Subject } from \"rxjs\";\nimport { OK_RESPONSE_CODE, UNKNOWN_ERROR_RESPONSE_CODE, INVALID_ID_ERROR_RESPONSE_CODE } from \"../constants\";\nconst baseUrl = 'http://localhost:8000';\nconst carsDataChangedSubject = new Subject();\nexport const carsDataChanged = carsDataChangedSubject.asObservable();\nexport async function getAllCars() {\n  let cars = [];\n\n  try {\n    const result = await axios.get(baseUrl + '/api/cars', {\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n    cars = result.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return cars;\n}\nexport async function getCarById(id) {\n  let car = {};\n\n  try {\n    const result = await axios.get(`${baseUrl}/api/car/${id}`, {\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n    car = result.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  const responseCode = car.id !== undefined ? OK_RESPONSE_CODE : INVALID_ID_ERROR_RESPONSE_CODE;\n  return {\n    responseCode,\n    car\n  };\n}\nexport async function createCar(carToCreate) {\n  try {\n    await axios.post(`${baseUrl}/api/car`, carToCreate, {\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n    carsDataChangedSubject.next();\n    return {\n      responseCode: OK_RESPONSE_CODE\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      responseCode: UNKNOWN_ERROR_RESPONSE_CODE\n    };\n  }\n}\nexport async function updateCar(carToUpdate) {\n  try {\n    await axios.put(`${baseUrl}/api/car/${carToUpdate.id}`, carToUpdate, {\n      // чувствую себя старым...\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n    carsDataChangedSubject.next();\n    return {\n      responseCode: OK_RESPONSE_CODE\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      responseCode: UNKNOWN_ERROR_RESPONSE_CODE\n    };\n  }\n}\nexport async function deleteCar(carIdToDelete) {\n  try {\n    await axios.delete(`${baseUrl}/api/car/${carIdToDelete}`, {\n      // тут id? Так.\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n    carsDataChangedSubject.next();\n    return {\n      responseCode: OK_RESPONSE_CODE\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      responseCode: UNKNOWN_ERROR_RESPONSE_CODE\n    };\n  }\n}","map":{"version":3,"sources":["/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/services/cars.js"],"names":["axios","Subject","OK_RESPONSE_CODE","UNKNOWN_ERROR_RESPONSE_CODE","INVALID_ID_ERROR_RESPONSE_CODE","baseUrl","carsDataChangedSubject","carsDataChanged","asObservable","getAllCars","cars","result","get","headers","localStorage","getItem","data","error","console","log","getCarById","id","car","responseCode","undefined","createCar","carToCreate","post","next","updateCar","carToUpdate","put","deleteCar","carIdToDelete","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Subject } from \"rxjs\";\nimport { OK_RESPONSE_CODE, UNKNOWN_ERROR_RESPONSE_CODE, INVALID_ID_ERROR_RESPONSE_CODE } from \"../constants\";\n\nconst baseUrl = 'http://localhost:8000';\n\nconst carsDataChangedSubject = new Subject();\n\nexport const carsDataChanged = carsDataChangedSubject.asObservable();\n\nexport async function getAllCars() {\n    let cars = [];\n    try {\n        const result = await axios.get(baseUrl+'/api/cars', {\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });\n        cars = result.data;\n    } catch(error) {\n        console.log(error);\n    }\n    \n    return cars;\n}\n\nexport async function getCarById(id) {\n    let car = {};\n    try {\n        const result = await axios.get(`${baseUrl}/api/car/${id}`, {\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });  \n        car = result.data;\n    } catch(error) {\n        console.log(error);\n    }\n\n    const responseCode = car.id !== undefined ? OK_RESPONSE_CODE : INVALID_ID_ERROR_RESPONSE_CODE;\n\n    return { responseCode, car }\n}\n\nexport async function createCar(carToCreate) {\n    try {\n        await axios.post(`${ baseUrl }/api/car`, carToCreate, {\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });\n\n        carsDataChangedSubject.next();\n        return { responseCode: OK_RESPONSE_CODE };\n    } catch(error) {\n        console.log(error);\n        return { responseCode: UNKNOWN_ERROR_RESPONSE_CODE };\n    }\n    \n    \n}\n\nexport async function updateCar(carToUpdate) {\n    try {\n        await axios.put(`${ baseUrl }/api/car/${carToUpdate.id}`, carToUpdate, { // чувствую себя старым...\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });\n\n        carsDataChangedSubject.next();\n        return { responseCode: OK_RESPONSE_CODE };\n    } catch(error) {\n        console.log(error);\n        return { responseCode: UNKNOWN_ERROR_RESPONSE_CODE };\n    }\n}\n\nexport async function deleteCar(carIdToDelete) {\n    try {\n        await axios.delete(`${ baseUrl }/api/car/${ carIdToDelete }`, { // тут id? Так.\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });\n\n        carsDataChangedSubject.next();\n        return { responseCode: OK_RESPONSE_CODE };\n    } catch(error) {\n        console.log(error);\n        return { responseCode: UNKNOWN_ERROR_RESPONSE_CODE };\n    }\n}"]},"metadata":{},"sourceType":"module"}