{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/components/modals/EditingCarModal.js\";\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport React from 'react';\nimport { OK_RESPONSE_CODE, UNKNOWN_ERROR_RESPONSE_CODE, INVALID_ID_ERROR_RESPONSE_CODE, DISPLAY_EDITING_CAR_MODAL } from '../../constants';\nimport { getCarById, updateCar } from '../../services/cars';\nconst initialState = {\n  isUnknownError: false,\n  isWrongPrice: false,\n  isWaitingForRequest: false,\n  isWaitingForResponse: false,\n  isInvalidIdError: false,\n  brand: '',\n  model: '',\n  price: 0\n};\n\nclass EditingCarModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBrandChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      brand: value\n    });\n\n    this.handleModelChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      model: value\n    });\n\n    this.handlePriceChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      price: value\n    });\n\n    this.handleSave = () => {\n      const priceNumber = +this.state.price;\n      /*eslint-disable */\n\n      if (this.state.price != priceNumber) {\n        this.setState({\n          isWrongPrice: true\n        });\n        return;\n      }\n      /*eslint-enable */\n\n\n      this.setState({\n        isWaitingForResponse: true,\n        isWrongPrice: false\n      });\n      const car = {\n        id: this.props.selectedCarId,\n        brand: this.state.brand,\n        model: this.state.model,\n        price: priceNumber\n      };\n      updateCar(car).then(response => {\n        if (response.responseCode === UNKNOWN_ERROR_RESPONSE_CODE) {\n          this.setState({\n            isUnknownError: true\n          });\n        } else {\n          this.closeModal();\n        }\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  closeModal() {\n    this.props.onModalClose();\n  }\n\n  componentDidMount() {\n    this.setState({\n      isWaitingForRequest: true\n    });\n    getCarById(this.props.selectedCarId).then(response => {\n      switch (response.responseCode) {\n        case OK_RESPONSE_CODE:\n          this.setState({\n            isWaitingForRequest: false,\n            brand: response.car.brand,\n            model: response.car.model,\n            price: response.car.price\n          });\n          break;\n\n        case INVALID_ID_ERROR_RESPONSE_CODE:\n          this.setState({\n            isWaitingForRequest: false,\n            isInvalidIdError: true\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  render() {\n    const {\n      isUnknownError,\n      isWrongPrice,\n      isWaitingForResponse,\n      isInvalidIdError,\n      brand,\n      model,\n      price\n    } = this.state;\n    const {\n      displayModalType\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: displayModalType === DISPLAY_EDITING_CAR_MODAL,\n      onHide: this.closeModal.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: isInvalidIdError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Car is not found from server, please refresh browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"brand\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: brand,\n                onChange: this.handleBrandChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"model\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: model,\n                onChange: this.handleModelChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"price\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"price\",\n                value: price,\n                onChange: this.handlePriceChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            show: isWaitingForResponse,\n            variant: \"primary\",\n            children: \"Car is saving, please wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            show: isUnknownError,\n            variant: \"danger\",\n            children: \"Unknown error of editing car\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            show: isWrongPrice,\n            variant: \"danger\",\n            children: \"Price is wrong, it should be number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleSave,\n          disabled: isWaitingForResponse,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditingCarModal;","map":{"version":3,"sources":["/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/components/modals/EditingCarModal.js"],"names":["Modal","Button","Form","Alert","React","OK_RESPONSE_CODE","UNKNOWN_ERROR_RESPONSE_CODE","INVALID_ID_ERROR_RESPONSE_CODE","DISPLAY_EDITING_CAR_MODAL","getCarById","updateCar","initialState","isUnknownError","isWrongPrice","isWaitingForRequest","isWaitingForResponse","isInvalidIdError","brand","model","price","EditingCarModal","Component","constructor","props","handleBrandChange","target","value","setState","handleModelChange","handlePriceChange","handleSave","priceNumber","state","car","id","selectedCarId","then","response","responseCode","closeModal","onModalClose","componentDidMount","render","displayModalType","bind"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,gBADJ,EAEIC,2BAFJ,EAGIC,8BAHJ,EAIIC,yBAJJ,QAIqC,iBAJrC;AAKA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,qBAAtC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,KADC;AAEjBC,EAAAA,YAAY,EAAE,KAFG;AAGjBC,EAAAA,mBAAmB,EAAE,KAHJ;AAIjBC,EAAAA,oBAAoB,EAAE,KAJL;AAKjBC,EAAAA,gBAAgB,EAAE,KALD;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,KAAK,EAAE,EAPU;AAQjBC,EAAAA,KAAK,EAAE;AARU,CAArB;;AAWA,MAAMC,eAAN,SAA8BhB,KAAK,CAACiB,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,iBANmB,GAMC,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B,KAAKC,QAAL,CAAc;AAAEV,MAAAA,KAAK,EAAES;AAAT,KAAd,CAN5B;;AAAA,SAOnBE,iBAPmB,GAOC,CAAC;AAAEH,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B,KAAKC,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAEQ;AAAT,KAAd,CAP5B;;AAAA,SAQnBG,iBARmB,GAQC,CAAC;AAAEJ,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO;AAAT,KAAd,CAR5B;;AAAA,SASnBI,UATmB,GASN,MAAM;AACf,YAAMC,WAAW,GAAG,CAAC,KAAKC,KAAL,CAAWb,KAAhC;AACA;;AACA,UAAI,KAAKa,KAAL,CAAWb,KAAX,IAAoBY,WAAxB,EAAqC;AACjC,aAAKJ,QAAL,CAAc;AAAEd,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA;AACH;AACD;;;AACA,WAAKc,QAAL,CAAc;AAAEZ,QAAAA,oBAAoB,EAAE,IAAxB;AAA8BF,QAAAA,YAAY,EAAE;AAA5C,OAAd;AAEA,YAAMoB,GAAG,GAAG;AACRC,QAAAA,EAAE,EAAE,KAAKX,KAAL,CAAWY,aADP;AAERlB,QAAAA,KAAK,EAAE,KAAKe,KAAL,CAAWf,KAFV;AAGRC,QAAAA,KAAK,EAAE,KAAKc,KAAL,CAAWd,KAHV;AAIRC,QAAAA,KAAK,EAAEY;AAJC,OAAZ;AAOArB,MAAAA,SAAS,CAACuB,GAAD,CAAT,CAAeG,IAAf,CAAoBC,QAAQ,IAAI;AAC5B,YAAIA,QAAQ,CAACC,YAAT,KAA0BhC,2BAA9B,EAA2D;AACvD,eAAKqB,QAAL,CAAc;AAAEf,YAAAA,cAAc,EAAE;AAAlB,WAAd;AACH,SAFD,MAEO;AACH,eAAK2B,UAAL;AACH;AACJ,OAND;AAOH,KAjCkB;;AAGf,SAAKP,KAAL,GAAarB,YAAb;AACH;;AA+BD4B,EAAAA,UAAU,GAAG;AACT,SAAKhB,KAAL,CAAWiB,YAAX;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKd,QAAL,CAAc;AAAEb,MAAAA,mBAAmB,EAAE;AAAvB,KAAd;AACAL,IAAAA,UAAU,CAAC,KAAKc,KAAL,CAAWY,aAAZ,CAAV,CAAqCC,IAArC,CAA0CC,QAAQ,IAAI;AAClD,cAAQA,QAAQ,CAACC,YAAjB;AACI,aAAKjC,gBAAL;AACI,eAAKsB,QAAL,CAAc;AACVb,YAAAA,mBAAmB,EAAE,KADX;AAEVG,YAAAA,KAAK,EAAEoB,QAAQ,CAACJ,GAAT,CAAahB,KAFV;AAGVC,YAAAA,KAAK,EAAEmB,QAAQ,CAACJ,GAAT,CAAaf,KAHV;AAIVC,YAAAA,KAAK,EAAEkB,QAAQ,CAACJ,GAAT,CAAad;AAJV,WAAd;AAMA;;AAEJ,aAAKZ,8BAAL;AACI,eAAKoB,QAAL,CAAc;AACVb,YAAAA,mBAAmB,EAAE,KADX;AAEVE,YAAAA,gBAAgB,EAAE;AAFR,WAAd;AAIA;;AAEJ;AACI;AAlBR;AAoBH,KArBD;AAsBH;;AAED0B,EAAAA,MAAM,GAAG;AACL,UAAM;AACF9B,MAAAA,cADE;AAEFC,MAAAA,YAFE;AAGFE,MAAAA,oBAHE;AAIFC,MAAAA,gBAJE;AAKFC,MAAAA,KALE;AAMFC,MAAAA,KANE;AAOFC,MAAAA;AAPE,QAQF,KAAKa,KART;AAUA,UAAM;AACFW,MAAAA;AADE,QAEF,KAAKpB,KAFT;AAIA,wBACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEoB,gBAAgB,KAAKnC,yBAAlC;AAA6D,MAAA,MAAM,EAAE,KAAK+B,UAAL,CAAgBK,IAAhB,CAAqB,IAArB,CAArE;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAA,kBACK5B,gBAAgB,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADW,gBAEX;AAAA,kCACF,QAAC,IAAD;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,OAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,KAAK,EAAEC,KAAjC;AAAwC,gBAAA,QAAQ,EAAE,KAAKO;AAAvD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,OAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,KAAK,EAAEN,KAAjC;AAAwC,gBAAA,QAAQ,EAAE,KAAKU;AAAvD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,OAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,OAAnB;AAA2B,gBAAA,KAAK,EAAET,KAAlC;AAAyC,gBAAA,QAAQ,EAAE,KAAKU;AAAxD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,eAiBF,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEd,oBAAb;AAAmC,YAAA,OAAO,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBE,eAoBF,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEH,cAAb;AAA6B,YAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBE,eAuBF,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEC,YAAb;AAA2B,YAAA,OAAO,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBE;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,cALJ,eAqCI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,KAAKiB,UAAxC;AAAoD,UAAA,QAAQ,EAAEf,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AA3HyC;;AA8H9C,eAAeK,eAAf","sourcesContent":["import { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport React from 'react';\nimport {\n    OK_RESPONSE_CODE,\n    UNKNOWN_ERROR_RESPONSE_CODE,\n    INVALID_ID_ERROR_RESPONSE_CODE,\n    DISPLAY_EDITING_CAR_MODAL } from '../../constants';\nimport { getCarById, updateCar } from '../../services/cars';\n\nconst initialState = {\n    isUnknownError: false,\n    isWrongPrice: false,\n    isWaitingForRequest: false,\n    isWaitingForResponse: false,\n    isInvalidIdError: false,\n    brand: '',\n    model: '',\n    price: 0\n};\n\nclass EditingCarModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = initialState;\n    }\n\n    handleBrandChange = ({ target: { value } }) => this.setState({ brand: value });\n    handleModelChange = ({ target: { value } }) => this.setState({ model: value });\n    handlePriceChange = ({ target: { value } }) => this.setState({ price: value });\n    handleSave = () => {\n        const priceNumber = +this.state.price;\n        /*eslint-disable */\n        if (this.state.price != priceNumber) { \n            this.setState({ isWrongPrice: true });\n            return;\n        }\n        /*eslint-enable */\n        this.setState({ isWaitingForResponse: true, isWrongPrice: false });\n\n        const car = {\n            id: this.props.selectedCarId,\n            brand: this.state.brand,\n            model: this.state.model,\n            price: priceNumber\n        };\n\n        updateCar(car).then(response => {\n            if (response.responseCode === UNKNOWN_ERROR_RESPONSE_CODE) {\n                this.setState({ isUnknownError: true });\n            } else {\n                this.closeModal();\n            }           \n        });\n    };\n\n    closeModal() {\n        this.props.onModalClose();\n    }\n\n    componentDidMount() {\n        this.setState({ isWaitingForRequest: true });\n        getCarById(this.props.selectedCarId).then(response => {\n            switch (response.responseCode) {\n                case OK_RESPONSE_CODE:\n                    this.setState({\n                        isWaitingForRequest: false,\n                        brand: response.car.brand,\n                        model: response.car.model,\n                        price: response.car.price\n                    });\n                    break;\n\n                case INVALID_ID_ERROR_RESPONSE_CODE:\n                    this.setState({\n                        isWaitingForRequest: false,\n                        isInvalidIdError: true\n                    });\n                    break;\n\n                default:\n                    break;\n            }\n        });\n    }\n\n    render() {\n        const {\n            isUnknownError,\n            isWrongPrice,\n            isWaitingForResponse,\n            isInvalidIdError,\n            brand,\n            model,\n            price\n        } = this.state;\n\n        const {\n            displayModalType\n        } = this.props;\n\n        return (\n            <Modal show={displayModalType === DISPLAY_EDITING_CAR_MODAL} onHide={this.closeModal.bind(this)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit car</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    {isInvalidIdError\n                        ? <p>Car is not found from server, please refresh browser</p>\n                        : <>\n                        <Form>\n                            <Form.Group controlId=\"brand\">\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control type=\"text\" value={brand} onChange={this.handleBrandChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"model\">\n                                <Form.Label>Model</Form.Label>\n                                <Form.Control type=\"text\" value={model} onChange={this.handleModelChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"price\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"price\" value={price} onChange={this.handlePriceChange} />\n                            </Form.Group>\n                        </Form>\n                        <Alert show={isWaitingForResponse} variant=\"primary\">\n                            Car is saving, please wait\n                        </Alert>\n                        <Alert show={isUnknownError} variant=\"danger\">\n                            Unknown error of editing car\n                        </Alert>\n                        <Alert show={isWrongPrice} variant=\"danger\">\n                            Price is wrong, it should be number\n                        </Alert>\n                        </>\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={this.handleSave} disabled={isWaitingForResponse}>Save</Button>\n                </Modal.Footer>\n            </Modal>)\n    }\n}\n\nexport default EditingCarModal;"]},"metadata":{},"sourceType":"module"}