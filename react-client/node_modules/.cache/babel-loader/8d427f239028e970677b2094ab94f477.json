{"ast":null,"code":"import axios from \"axios\";\nimport { Subject } from \"rxjs\";\nimport { OK_RESPONSE_CODE, UNKNOWN_ERROR_RESPONSE_CODE, AUTHENTICATION_ERROR_RESPONSE_CODE, USERNAME_VALID_ERROR_RESPONSE_CODE } from \"../constants\";\nconst PROBLEM_REGISTER_STATUS = 'NO';\nconst baseUrl = 'http://localhost:8000';\nconst isLoggedInChangedSubject = new Subject();\nexport const isLoggedInChanged = isLoggedInChangedSubject.asObservable();\nexport async function signIn(username, password) {\n  let responseCode = OK_RESPONSE_CODE;\n  let token = '';\n\n  try {\n    const response = await axios.post(baseUrl + \"/signin\", {\n      username,\n      password\n    });\n    token = response.data;\n\n    if (token === '') {\n      responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n    } else {\n      responseCode = OK_RESPONSE_CODE;\n    }\n  } catch (error) {\n    console.log(error);\n    responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n  }\n\n  if (responseCode === OK_RESPONSE_CODE) {\n    localStorage.setItem('Token', token);\n    isLoggedInChangedSubject.next(true);\n  }\n\n  return {\n    responseCode,\n    token\n  };\n}\nexport async function signUp(username, password) {\n  let responseCode = OK_RESPONSE_CODE;\n  let status = PROBLEM_REGISTER_STATUS;\n\n  try {\n    const response = await axios.post(baseUrl + \"/signup\", {\n      username,\n      password\n    });\n    const status = response.data;\n\n    if (status === PROBLEM_REGISTER_STATUS) {\n      responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n    } else {\n      responseCode = OK_RESPONSE_CODE;\n    }\n  } catch (error) {\n    console.log(error);\n    responseCode = USERNAME_VALID_ERROR_RESPONSE_CODE;\n  }\n\n  return {\n    responseCode,\n    status\n  };\n}\nexport async function logout() {\n  let responseCode = OK_RESPONSE_CODE;\n\n  try {\n    await axios.post(`${baseUrl}/logout`, {}, {\n      headers: {\n        'Token': `${localStorage.getItem('Token')}`\n      }\n    });\n\n    if (responseCode === OK_RESPONSE_CODE) {\n      localStorage.removeItem('Token');\n      isLoggedInChangedSubject.next(false);\n    }\n  } catch (error) {\n    console.log(error);\n    responseCode = UNKNOWN_ERROR_RESPONSE_CODE;\n  }\n\n  return {\n    responseCode\n  };\n}","map":{"version":3,"sources":["/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/services/account.js"],"names":["axios","Subject","OK_RESPONSE_CODE","UNKNOWN_ERROR_RESPONSE_CODE","AUTHENTICATION_ERROR_RESPONSE_CODE","USERNAME_VALID_ERROR_RESPONSE_CODE","PROBLEM_REGISTER_STATUS","baseUrl","isLoggedInChangedSubject","isLoggedInChanged","asObservable","signIn","username","password","responseCode","token","response","post","data","error","console","log","localStorage","setItem","next","signUp","status","logout","headers","getItem","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Subject } from \"rxjs\";\nimport {\n    OK_RESPONSE_CODE,\n    UNKNOWN_ERROR_RESPONSE_CODE,\n    AUTHENTICATION_ERROR_RESPONSE_CODE,\n    USERNAME_VALID_ERROR_RESPONSE_CODE } from \"../constants\";\n\nconst PROBLEM_REGISTER_STATUS = 'NO';\nconst baseUrl = 'http://localhost:8000';\n\nconst isLoggedInChangedSubject = new Subject();\n\nexport const isLoggedInChanged = isLoggedInChangedSubject.asObservable();\n\nexport async function signIn(username, password) {\n    let responseCode = OK_RESPONSE_CODE;\n    let token = '';\n    try {\n        const response = await axios.post(baseUrl + \"/signin\", { username, password });\n        token = response.data;\n        if (token === '') {\n            responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n        } else {\n            responseCode = OK_RESPONSE_CODE;\n        }\n    } catch (error) {\n        console.log(error);\n        responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n    }\n    \n    if (responseCode === OK_RESPONSE_CODE) {\n        localStorage.setItem('Token', token);\n        isLoggedInChangedSubject.next(true);\n    }\n    return { responseCode, token };\n}\n\nexport async function signUp(username, password) {  \n    let responseCode = OK_RESPONSE_CODE;\n    let status = PROBLEM_REGISTER_STATUS;\n    try {\n        const response = await axios.post(baseUrl + \"/signup\", { username, password });\n        const status = response.data;\n        if (status === PROBLEM_REGISTER_STATUS) {\n            responseCode = AUTHENTICATION_ERROR_RESPONSE_CODE;\n        } else {\n            responseCode = OK_RESPONSE_CODE;\n        }\n    } catch(error) {\n        console.log(error);\n        responseCode = USERNAME_VALID_ERROR_RESPONSE_CODE;\n    }\n    return { responseCode, status };\n}\n\nexport async function logout() {\n    let responseCode = OK_RESPONSE_CODE;\n    try {\n        await axios.post(`${baseUrl}/logout`, {}, {\n            headers: {\n                'Token': `${localStorage.getItem('Token')}`\n            }\n        });    \n        if (responseCode === OK_RESPONSE_CODE) {\n            localStorage.removeItem('Token');\n            isLoggedInChangedSubject.next(false);\n        }\n    } catch(error) {\n        console.log(error);\n        responseCode = UNKNOWN_ERROR_RESPONSE_CODE;\n    }\n\n    return { responseCode };\n}"]},"metadata":{},"sourceType":"module"}