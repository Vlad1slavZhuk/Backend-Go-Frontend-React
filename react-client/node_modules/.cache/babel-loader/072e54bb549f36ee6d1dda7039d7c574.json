{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/components/modals/SignUpModal.js\";\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport React from 'react';\nimport { USERNAME_VALID_ERROR_RESPONSE_CODE, DISPLAY_SIGN_UP_MODAL, OK_RESPONSE_CODE } from '../../constants';\nimport { signUp } from '../../services/account';\nconst initialState = {\n  isWaitingForResponse: false,\n  isUsernameValidError: false,\n  isSubmitPasswordError: false,\n  username: '',\n  password: '',\n  submitPassword: ''\n};\n\nclass SignUpModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUsernameChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      username: value\n    });\n\n    this.handlePasswordChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      password: value\n    });\n\n    this.handleSubmitPasswordChange = ({\n      target: {\n        value\n      }\n    }) => this.setState({\n      submitPassword: value\n    });\n\n    this.handleRegister = () => {\n      this.setState({\n        isUsernameValidError: false,\n        isSubmitPasswordError: false\n      });\n\n      if (this.state.password !== this.state.submitPassword) {\n        this.setState({\n          isSubmitPasswordError: true,\n          password: '',\n          submitPassword: ''\n        });\n        return;\n      }\n\n      this.setState({\n        isWaitingForResponse: true\n      });\n      signUp(this.state.username, this.state.password).then(({\n        responseCode\n      }) => {\n        switch (responseCode) {\n          case OK_RESPONSE_CODE:\n            this.closeModal();\n            break;\n\n          case USERNAME_VALID_ERROR_RESPONSE_CODE:\n            this.setState({\n              isUsernameValidError: true,\n              isWaitingForResponse: false\n            });\n            break;\n\n          default:\n            break;\n        }\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  closeModal() {\n    this.props.onModalClose();\n    this.setState(initialState);\n  }\n\n  render() {\n    const {\n      isWaitingForResponse,\n      isUsernameValidError,\n      isSubmitPasswordError\n    } = this.state;\n    const {\n      displayModalType\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: displayModalType === DISPLAY_SIGN_UP_MODAL,\n      onHide: this.closeModal.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: this.handleUsernameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              onChange: this.handlePasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"submitPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Submit password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              onChange: this.handleSubmitPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          show: isWaitingForResponse,\n          variant: \"primary\",\n          children: \"Account is registering, please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          show: isSubmitPasswordError,\n          variant: \"danger\",\n          children: \"Submit password is wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          show: isUsernameValidError,\n          variant: \"danger\",\n          children: \"Username is invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleRegister,\n          disabled: isWaitingForResponse,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUpModal;","map":{"version":3,"sources":["/home/vzhuchkov/go/src/Backend-Go-Frontend-React/react-client/src/components/modals/SignUpModal.js"],"names":["Modal","Button","Form","Alert","React","USERNAME_VALID_ERROR_RESPONSE_CODE","DISPLAY_SIGN_UP_MODAL","OK_RESPONSE_CODE","signUp","initialState","isWaitingForResponse","isUsernameValidError","isSubmitPasswordError","username","password","submitPassword","SignUpModal","Component","constructor","props","handleUsernameChange","target","value","setState","handlePasswordChange","handleSubmitPasswordChange","handleRegister","state","then","responseCode","closeModal","onModalClose","render","displayModalType","bind"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport React from 'react';\nimport { USERNAME_VALID_ERROR_RESPONSE_CODE, DISPLAY_SIGN_UP_MODAL, OK_RESPONSE_CODE } from '../../constants';\nimport { signUp } from '../../services/account';\n\nconst initialState = {\n    isWaitingForResponse: false,\n    isUsernameValidError: false,\n    isSubmitPasswordError: false,\n    username: '',\n    password: '',\n    submitPassword: ''\n};\n\nclass SignUpModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    }\n\n    handleUsernameChange = ({ target: { value } }) => this.setState({ username: value });\n    handlePasswordChange = ({ target: { value } }) => this.setState({ password: value });\n    handleSubmitPasswordChange = ({ target: { value } }) => this.setState({ submitPassword: value });\n\n    handleRegister = () => {\n        this.setState({\n            isUsernameValidError: false,\n            isSubmitPasswordError: false\n        });\n\n        if (this.state.password !== this.state.submitPassword) {\n            this.setState({\n                isSubmitPasswordError: true,\n                password: '',\n                submitPassword: ''\n            });\n            return;\n        }\n\n        this.setState({ isWaitingForResponse: true });\n        signUp(this.state.username, this.state.password).then(({ responseCode }) => {\n            switch (responseCode) {\n                case OK_RESPONSE_CODE:\n                    this.closeModal();\n                    break;\n\n                case USERNAME_VALID_ERROR_RESPONSE_CODE:\n                    this.setState({ isUsernameValidError: true, isWaitingForResponse: false });\n                    break;\n\n                default:\n                    break;\n            }\n        });\n    }\n\n    closeModal() {\n        this.props.onModalClose();\n        this.setState(initialState);\n    }\n\n    render() {\n        const {\n            isWaitingForResponse,\n            isUsernameValidError,\n            isSubmitPasswordError\n        } = this.state;\n\n        const {\n            displayModalType\n        } = this.props;\n\n        return (\n            <Modal show={displayModalType === DISPLAY_SIGN_UP_MODAL} onHide={this.closeModal.bind(this)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Sign Up</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" onChange={this.handleUsernameChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" onChange={this.handlePasswordChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"submitPassword\">\n                            <Form.Label>Submit password</Form.Label>\n                            <Form.Control type=\"password\" onChange={this.handleSubmitPasswordChange} />\n                        </Form.Group>\n                    </Form>\n                    <Alert show={isWaitingForResponse} variant=\"primary\">\n                        Account is registering, please wait\n                    </Alert>\n                    <Alert show={isSubmitPasswordError} variant=\"danger\">\n                        Submit password is wrong\n                    </Alert>\n                    <Alert show={isUsernameValidError} variant=\"danger\">\n                        Username is invalid\n                    </Alert>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={this.handleRegister} disabled={isWaitingForResponse}>Login</Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default SignUpModal;"]},"metadata":{},"sourceType":"module"}